三元运算符:
条件运算符"?:",其语法为:
// 条件表达式 ? 表达式1 : 表达式2;
bool b_show = true;
int state = b_show ? 0 : 1;
// state = 0;
语义:如果“条件表达式”为true，则整个表达式的值就是表达式1，忽略表达式2；如果“条件表达式”为false，则整个表达式的值就是表达式2，忽略表达式1。
等价于以下if/else语句:
Result result;
if (条件表达式)
{
    result = 表达式1;
}
else
{
    result = 表达式2;
}
---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
#include<string>
using std::string;

string.length()
---------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------
In C++, all containers (vector, stack, queue, set, map, etc) support both insert and emplace operations.
The advantage of emplace is, it does in-place insertion and avoids an unnecessary copy of object. For primitive data types, it does not
matter which one we use. But for objects, use of emplace() is preferred for efficiency reasons.

#include<vector>
using std::vector;

vector<someObject>.size()
vector<someObject>.begin()
